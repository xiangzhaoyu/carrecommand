package com.surekam.greenguide.ui.fragment;

import java.io.UnsupportedEncodingException;
import java.util.List;

import org.apache.http.entity.StringEntity;

import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;

import com.google.gson.Gson;
import com.lidroid.xutils.http.RequestParams;
import com.surekam.greenguide.R;
import com.surekam.greenguide.api.HttpExecute;
import com.surekam.greenguide.api.HttpExecute.httpReturn;
import com.surekam.greenguide.api._FakeX509TrustManager;
import com.surekam.greenguide.app.UIHelper;
import com.surekam.greenguide.bean.EventClass;
import com.surekam.greenguide.bean.WedGeos;
import com.surekam.greenguide.common.BaseFragment;
import com.surekam.greenguide.tools.DebugUtil;
import com.surekam.greenguide.tools.MenuUtil;
import com.surekam.greenguide.ui.activity.ActivityWhiteList;
import com.surekam.greenguide.widge.CustomSeekBar;

public class FragmentWhiteListNormal extends BaseFragment {
	CustomSeekBar _seekBar;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		_view = inflater.inflate(R.layout.fragment_white_list_normal, null);
		_view.setOnTouchListener(mTouchListner);

		initTitle();
		initView();

		// testData();
		//testGetData();
		//testGetDataCount();
		testGetPolicies();
		
		return _view;
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onActivityCreated(savedInstanceState);

	}

	private void initTitle() {
		MenuUtil.setMenuBack(getActivity(), _view);
		MenuUtil.setMenuTitle(_view, "过滤设置");
		MenuUtil.setMenuBackTransparent(_view);
		MenuUtil.setMenuMore(getActivity(), _view, false);
	}

	private void initView() {
		_view.findViewById(R.id.white_list_bt_advance).setOnClickListener(
				new OnClickListener() {

					@Override
					public void onClick(View arg0) {
						// TODO Auto-generated method stub
						// ((ActivityMain) getActivity()).addFragment(
						// new FragmentWhiteListAdvance(),
						// "FragmentWhiteListAdvance");

						Intent it = new Intent(getActivity(),
								ActivityWhiteList.class);
						getActivity().startActivity(it);
					}
				});

		_seekBar = (CustomSeekBar) _view.findViewById(R.id.white_list_seekbar);
		_seekBar.setOnSeekBarChangeListener(_seekbarListener);

		_seekBar.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub

			}
		});

		_seekBar.setProgress(50);
	}

	int lastProgress = 0;
	int newProgress = 0;
	OnSeekBarChangeListener _seekbarListener = new OnSeekBarChangeListener() {

		@Override
		public void onProgressChanged(SeekBar paramSeekBar, int progress,
				boolean fromUser) {
			// TODO Auto-generated method stub
			DebugUtil.printDebugTag("onProgressChanged=", "cc progress="
					+ progress + " lastProgress=" + lastProgress
					+ " newProgress=" + newProgress);

			// if (progress > newProgress + 10 || progress < newProgress - 10) {
			// newProgress = lastProgress;
			// paramSeekBar.setProgress(newProgress);
			// return;
			// }
			//
			newProgress = progress;

			if (newProgress < 30) {
				lastProgress = 0;
				newProgress = 0;
				_seekBar.setProgress(0);
			} else if (newProgress > 70) {
				// 设置lastProgress 要放在setProgress之前，否则可能导致执行多次onProgressChanged
				// 改变了原值
				lastProgress = 100;
				newProgress = 100;
				_seekBar.setProgress(100);
			} else {
				lastProgress = 50;
				newProgress = 50;
				_seekBar.setProgress(50);
			}

		}

		@Override
		public void onStartTrackingTouch(SeekBar arg0) {
			// TODO Auto-generated method stub
			DebugUtil.printDebugTag("onStartTrackingTouch=", " lastProgress="
					+ lastProgress + " newProgress=" + newProgress);

		}

		@Override
		public void onStopTrackingTouch(SeekBar arg0) {
			// TODO Auto-generated method stub
			DebugUtil.printDebugTag("onStopTrackingTouch=", " lastProgress="
					+ lastProgress + " newProgress=" + newProgress);

			if (newProgress < 30) {
				lastProgress = 0;
				newProgress = 0;
				_seekBar.setProgress(0);
			} else if (newProgress > 70) {
				// 设置lastProgress 要放在setProgress之前，否则可能导致执行多次onProgressChanged
				// 改变了原值
				lastProgress = 100;
				newProgress = 100;
				_seekBar.setProgress(100);
			} else {
				lastProgress = 50;
				newProgress = 50;
				_seekBar.setProgress(50);
			}

		}

	};

	OnTouchListener mTouchListner = new OnTouchListener() {
		@Override
		public boolean onTouch(View v, MotionEvent event) {
			// TODO Auto-generated method stub
			return true;
		}
	};

	private void testData() {

		_FakeX509TrustManager.allowAllSSL();

		HttpExecute http = new HttpExecute(getActivity(), mListener);

		String url = "https://greenet.wedgenetworks.com/ssgmanager/rest/policies/wf";

		String param = "{\"protocolList\":[\"HTTP\"],\"periodList\":[{\"repeatType\":\"EVERYDAY\",\"startDay\":0,\"endDay\":0,\"categoryList\":[{\"preloadId\":100,\"used\":false,\"categoryName\":\"Alcohol\",\"data\":\"101\",\"description\":\"\",\"id\":16}],\"startTime\":null,\"endTime\":null,\"timezone\":null}],\"blockPeriodList\":[],\"actionType\":\"DETECT\",\"policyPath\":{\"dstAddress\":\"0.0.0.0/0\",\"srcAddress\":\"192.168.97.43\",\"srcIsGroup\":false,\"srcName\":null},\"excludeType\":\"NONE\",\"scanRequest\":true,\"scanResponse\":true,\"serviceType\":\"WF\"})";

		RequestParams params = new RequestParams();
		params.addHeader("Content-Type", "application/json");
		try {
			params.setBodyEntity(new StringEntity(param, "UTF-8"));
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		http.post(url, params);

	}

	private void testGetData() {

		_FakeX509TrustManager.allowAllSSL();

		HttpExecute<List<EventClass>> http = new HttpExecute<List<EventClass>>(
				getActivity(), mListener);

		String url = "https://greenet.wedgenetworks.com/ssgmanager/rest/events";

		http.get(url, null);

	}

	private httpReturn<List<EventClass>> mListener = new httpReturn<List<EventClass>>() {
		@Override
		public void onFailure(int error, String msg) {
			// TODO Auto-generated method stub

		}

		@Override
		public void onCancel() {
			// TODO Auto-generated method stub

		}

		@Override
		public void onSuccess(List<EventClass> result) {
			// TODO Auto-generated method stub
			UIHelper.ToastMessage(_context, new Gson().toJson(result));
		}
	};
	
	
	private void testGetDataCount() {

		_FakeX509TrustManager.allowAllSSL();

		HttpExecute<Double> http = new HttpExecute<Double>(
				getActivity(), mCountListener);

		String url = "https://greenet.wedgenetworks.com/ssgmanager/rest/events/count";

		http.get(url, null);

	}

	private httpReturn<Double> mCountListener = new httpReturn<Double>() {
		@Override
		public void onFailure(int error, String msg) {
			// TODO Auto-generated method stub

		}

		@Override
		public void onCancel() {
			// TODO Auto-generated method stub

		}

		@Override
		public void onSuccess(Double result) {
			// TODO Auto-generated method stub
			UIHelper.ToastMessage(_context,"总条数=" +  result + "");
		}
	};
	
	
	
	private void testGetPolicies() {

		_FakeX509TrustManager.allowAllSSL();

		HttpExecute<List<WedGeos>> http = new HttpExecute<List<WedGeos>>(
				getActivity(), mPoliciesListener);

		String url = "https://greenet.wedgenetworks.com/ssgmanager/rest/policies";

		http.get(url, null);

	}

	private httpReturn<List<WedGeos>> mPoliciesListener = new httpReturn<List<WedGeos>>() {
		@Override
		public void onFailure(int error, String msg) {
			// TODO Auto-generated method stub

		}

		@Override
		public void onCancel() {
			// TODO Auto-generated method stub

		}

		@Override
		public void onSuccess(List<WedGeos> result) {
			// TODO Auto-generated method stub
			UIHelper.ToastMessage(_context,"总条数=" +  result + "");
		}
	};

}
