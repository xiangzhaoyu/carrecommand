package com.surekam.greenguide.ui.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;

import com.surekam.greenguide.R;
import com.surekam.greenguide.common.BaseFragment;
import com.surekam.greenguide.tools.DebugUtil;
import com.surekam.greenguide.tools.MenuUtil;
import com.surekam.greenguide.ui.activity.ActivityWhiteList;
import com.surekam.greenguide.widge.CustomSeekBar;

public class FragmentWhiteListNormal extends BaseFragment {
	CustomSeekBar _seekBar;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		_view = inflater.inflate(R.layout.fragment_white_list_normal, null);
		_view.setOnTouchListener(mTouchListner);

		initTitle();
		initView();

		return _view;
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onActivityCreated(savedInstanceState);

	}

	private void initTitle() {
		MenuUtil.setMenuBack(getActivity(), _view);
		MenuUtil.setMenuTitle(_view, "过滤设置");
		MenuUtil.setMenuBackTransparent(_view);
		MenuUtil.setMenuMore(getActivity(), _view, false);
	}

	private void initView() {
		_view.findViewById(R.id.white_list_bt_advance).setOnClickListener(
				new OnClickListener() {

					@Override
					public void onClick(View arg0) {
						// TODO Auto-generated method stub
						// ((ActivityMain) getActivity()).addFragment(
						// new FragmentWhiteListAdvance(),
						// "FragmentWhiteListAdvance");

						Intent it = new Intent(getActivity(),
								ActivityWhiteList.class);
						getActivity().startActivity(it);
					}
				});

		_seekBar = (CustomSeekBar) _view.findViewById(R.id.white_list_seekbar);
		_seekBar.setOnSeekBarChangeListener(_seekbarListener);

		_seekBar.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub

			}
		});

		_seekBar.setProgress(50);
	}

	int lastProgress = 0;
	int newProgress = 0;
	OnSeekBarChangeListener _seekbarListener = new OnSeekBarChangeListener() {

		@Override
		public void onProgressChanged(SeekBar paramSeekBar, int progress,
				boolean fromUser) {
			// TODO Auto-generated method stub
			DebugUtil.printDebugTag("onProgressChanged=", "cc progress="
					+ progress + " lastProgress=" + lastProgress
					+ " newProgress=" + newProgress);

			// if (progress > newProgress + 10 || progress < newProgress - 10) {
			// newProgress = lastProgress;
			// paramSeekBar.setProgress(newProgress);
			// return;
			// }
			//
			newProgress = progress;

			if (newProgress < 30) {
				lastProgress = 0;
				newProgress = 0;
				_seekBar.setProgress(0);
			} else if (newProgress > 70) {
				// 设置lastProgress 要放在setProgress之前，否则可能导致执行多次onProgressChanged
				// 改变了原值
				lastProgress = 100;
				newProgress = 100;
				_seekBar.setProgress(100);
			} else {
				lastProgress = 50;
				newProgress = 50;
				_seekBar.setProgress(50);
			}

		}

		@Override
		public void onStartTrackingTouch(SeekBar arg0) {
			// TODO Auto-generated method stub
			DebugUtil.printDebugTag("onStartTrackingTouch=", " lastProgress="
					+ lastProgress + " newProgress=" + newProgress);

		}

		@Override
		public void onStopTrackingTouch(SeekBar arg0) {
			// TODO Auto-generated method stub
			DebugUtil.printDebugTag("onStopTrackingTouch=", " lastProgress="
					+ lastProgress + " newProgress=" + newProgress);

			if (newProgress < 30) {
				lastProgress = 0;
				newProgress = 0;
				_seekBar.setProgress(0);
			} else if (newProgress > 70) {
				// 设置lastProgress 要放在setProgress之前，否则可能导致执行多次onProgressChanged
				// 改变了原值
				lastProgress = 100;
				newProgress = 100;
				_seekBar.setProgress(100);
			} else {
				lastProgress = 50;
				newProgress = 50;
				_seekBar.setProgress(50);
			}

		}

	};

	OnTouchListener mTouchListner = new OnTouchListener() {
		@Override
		public boolean onTouch(View v, MotionEvent event) {
			// TODO Auto-generated method stub
			return true;
		}
	};

}
